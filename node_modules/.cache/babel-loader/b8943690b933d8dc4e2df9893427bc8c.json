{"ast":null,"code":"import { fork, take, takeEvery, delay, takeLatest, select, call, put } from \"redux-saga/effects\";\nimport { cyberbugsService } from './../../../services/CyberbugsService';\nimport { STATUS_CODE } from './../../../util/constants/settingSystem';\nimport { GET_ALL_PROJECT_CATEGORY_SAGA, GET_ALL_PROJECT_CATEGORY } from './../../constants/Cyberbugs/Cyberbugs';\n\nfunction* getAllProjectCategory(action) {\n  // console.log(\"actionSaga\", action);\n  try {\n    //gọi api bằng yield call, hàm call nhận vào 1 callback function mà trả về promise\n    const {\n      data,\n      status\n    } = yield call(() => {\n      return cyberbugsService.getAllProjectCategory();\n    }); // console.log(\"data saga\", data);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      //gọi api thành công thì dispatch action thường chứa category lên redux Store\n      yield put({\n        type: GET_ALL_PROJECT_CATEGORY,\n        arrCategory: data.content\n      });\n    }\n  } catch (err) {\n    console.log(\"error\", err.response.data);\n  }\n\n  ;\n}\n\nexport function* theoDoigetAllProjectCategory() {\n  yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategory);\n}","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/redux/sagas/CyberBugs/ProjectCyberbugsCategorySaga.js"],"names":["fork","take","takeEvery","delay","takeLatest","select","call","put","cyberbugsService","STATUS_CODE","GET_ALL_PROJECT_CATEGORY_SAGA","GET_ALL_PROJECT_CATEGORY","getAllProjectCategory","action","data","status","SUCCESS","type","arrCategory","content","err","console","log","response","theoDoigetAllProjectCategory"],"mappings":"AAAA,SACIA,IADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,UALJ,EAMIC,MANJ,EAOIC,IAPJ,EAQIC,GARJ,QASS,oBATT;AAUE,SAASC,gBAAT,QAAiC,sCAAjC;AACF,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,6BAAT,EAAwCC,wBAAxC,QAAwE,uCAAxE;;AAKA,UAAWC,qBAAX,CAAiCC,MAAjC,EAAyC;AACrC;AAGA,MAAI;AAEA;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAiB,MAAMT,IAAI,CAAC,MAAM;AACpC,aAAOE,gBAAgB,CAACI,qBAAjB,EAAP;AACH,KAFgC,CAAjC,CAHA,CAOA;;AAEA,QAAGG,MAAM,KAAKN,WAAW,CAACO,OAA1B,EAAmC;AAC/B;AACA,YAAMT,GAAG,CAAC;AACNU,QAAAA,IAAI,EAAEN,wBADA;AAENO,QAAAA,WAAW,EAAEJ,IAAI,CAACK;AAFZ,OAAD,CAAT;AAIH;AAEJ,GAjBD,CAiBE,OAAMC,GAAN,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAAG,CAACG,QAAJ,CAAaT,IAAlC;AACH;;AAGL;AAAE;;AAOF,OAAO,UAAUU,4BAAV,GAAyC;AAC5C,QAAMpB,UAAU,CAACM,6BAAD,EAAgCE,qBAAhC,CAAhB;AACD","sourcesContent":["import {\r\n    fork,\r\n    take,\r\n    takeEvery,\r\n    delay,\r\n    takeLatest,\r\n    select,\r\n    call,\r\n    put,\r\n  } from \"redux-saga/effects\";\r\n  import { cyberbugsService } from './../../../services/CyberbugsService';\r\nimport { STATUS_CODE } from './../../../util/constants/settingSystem';\r\nimport { GET_ALL_PROJECT_CATEGORY_SAGA, GET_ALL_PROJECT_CATEGORY } from './../../constants/Cyberbugs/Cyberbugs';\r\n\r\n\r\n\r\n\r\nfunction * getAllProjectCategory(action) {\r\n    // console.log(\"actionSaga\", action);\r\n\r\n\r\n    try {\r\n        \r\n        //gọi api bằng yield call, hàm call nhận vào 1 callback function mà trả về promise\r\n        const {data, status} = yield call(() => {\r\n            return cyberbugsService.getAllProjectCategory();\r\n        });\r\n\r\n        // console.log(\"data saga\", data);\r\n        \r\n        if(status === STATUS_CODE.SUCCESS) {\r\n            //gọi api thành công thì dispatch action thường chứa category lên redux Store\r\n            yield put({\r\n                type: GET_ALL_PROJECT_CATEGORY,\r\n                arrCategory: data.content,\r\n            })\r\n        }\r\n\r\n    } catch(err) {\r\n        console.log(\"error\", err.response.data);\r\n    }\r\n\r\n\r\n;}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function* theoDoigetAllProjectCategory() {\r\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategory);\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}