{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chun Folder\\\\Test web html\\\\Cyberbugs1\\\\src\\\\pages\\\\CyberBugs\\\\LoginCyberBugs\\\\LoginCyberBugs.js\";\nimport React from 'react';\nimport { Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined, FacebookOutlined, TwitterOutlined } from '@ant-design/icons';\nimport { withFormik, Form } from 'formik';\nimport * as Yup from \"yup\";\nimport { connect } from 'react-redux';\nimport { USER_SIGNIN_CYBERBUGS_API } from './../../../redux/constants/Cyberbugs/Cyberbugs';\nimport { signinCyberBugsAction } from './../../../redux/actions/CyberBugsAction/CyberBugsAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginCyberBugs(props) {\n  //props lúc này k chỉ bảo gồm props của component mà còn cả props của formik\n  // console.log(\"PROPS\", props);\n  //bóc tách phần tử\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \" d-flex flex-column justify-content-center align-items-center\",\n      style: {\n        height: window.innerHeight\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"LoginCyberBugs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        size: \"large\",\n        onChange: handleChange,\n        placeholder: \"enter your email\",\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 119\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        size: \"large\",\n        placeholder: \"enter your password\",\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 141\n        }, this),\n        className: \"m-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        size: \"large\",\n        className: \"mt-5 w-50 text-center\",\n        style: {\n          backgroundColor: 'rgb(131,199,93)',\n          color: 'white'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social mt-3 d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(FacebookOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 65\n          }, this),\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          className: \"ml-3\",\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(TwitterOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 82\n          }, this),\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n} //hàm withFormik cho phép chuyển đổi các props của thư viện Formik thành props của component HOC LoginCyberBugs\n\n\n_c = LoginCyberBugs;\nconst LoginCyberBugsWithFormik = withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: ''\n  }),\n  //hàm lấy dữ liệu từ form khi submit\n  handleSubmit: (values, {\n    props,\n    setSubmitting\n  }) => {\n    console.log(\"values\", values); //!props lúc này vừa bao gồm props của formik vừa bao gồm props của redux\n    // console.log(\"props\", props);\n    // let action = {\n    //     type: USER_SIGNIN_CYBERBUGS_API,\n    //     userLogin: {\n    //         email: values.email,\n    //         password: values.password,\n    //     }\n    // }\n    //?truyền thêm prop history của Route đến saga để thực hiện redirect đến trang home nếu đăng nhập thành công\n    //?redirect C1: truyền prop history\n    // props.dispatch(signinCyberBugsAction(values.email, values.password,props.history));\n\n    props.dispatch(signinCyberBugsAction(values.email, values.password));\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email không được để trống').email('email không hợp lệ'),\n    password: Yup.string().required('password không được để trống').min(5, 'password không được nhỏ hơn 6 kí tự').max(15, 'password không được lơn hơn 15 kí tự')\n  }),\n  displayName: 'LoginCyberBugs'\n})(LoginCyberBugs); //hàm connect cho phép chuyển đổi các props của thư viện redux thành props của component HOC LoginCyberBugs\n\nexport default connect()(LoginCyberBugsWithFormik);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginCyberBugs\");","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js"],"names":["React","Input","Button","UserOutlined","LockOutlined","FacebookOutlined","TwitterOutlined","withFormik","Form","Yup","connect","USER_SIGNIN_CYBERBUGS_API","signinCyberBugsAction","LoginCyberBugs","props","values","touched","errors","handleChange","handleBlur","handleSubmit","height","window","innerHeight","email","password","backgroundColor","color","LoginCyberBugsWithFormik","mapPropsToValues","setSubmitting","console","log","dispatch","validationSchema","object","shape","string","required","min","max","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined, FacebookOutlined, TwitterOutlined } from '@ant-design/icons';\r\nimport {withFormik, Form} from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {connect} from 'react-redux';\r\nimport { USER_SIGNIN_CYBERBUGS_API } from './../../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport { signinCyberBugsAction } from './../../../redux/actions/CyberBugsAction/CyberBugsAction';\r\n\r\n\r\nfunction LoginCyberBugs(props) {\r\n    //props lúc này k chỉ bảo gồm props của component mà còn cả props của formik\r\n    // console.log(\"PROPS\", props);\r\n    //bóc tách phần tử\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n      } = props;\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit = {handleSubmit} className=\" d-flex flex-column justify-content-center align-items-center\" style = {{height: window.innerHeight,}}>\r\n                <h3 className=\"text-center\">LoginCyberBugs</h3>\r\n                <Input name = \"email\" size = \"large\" onChange = {handleChange} placeholder=\"enter your email\" prefix={<UserOutlined />}/>\r\n                <div className =\"text-danger\">{errors.email}</div>\r\n\r\n\r\n                <Input type=\"password\" name = \"password\" onChange = {handleChange} size = \"large\" placeholder=\"enter your password\" prefix={<LockOutlined />} className=\"m-4\"/>   \r\n                <div className =\"text-danger\">{errors.password}</div>\r\n                \r\n\r\n                <Button htmlType = \"submit\" size = \"large\" className = \"mt-5 w-50 text-center\"\r\n                 style = {{backgroundColor: 'rgb(131,199,93)', color: 'white'}}>Login</Button>         \r\n                <div className=\"social mt-3 d-flex\">\r\n                    <Button type=\"primary\" shape=\"circle\" icon={<FacebookOutlined />} size={\"large\"}></Button>\r\n                    <Button type=\"primary\" className=\"ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}></Button>\r\n                </div>\r\n            </form>\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n//hàm withFormik cho phép chuyển đổi các props của thư viện Formik thành props của component HOC LoginCyberBugs\r\nconst LoginCyberBugsWithFormik =  withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '', \r\n        password:''\r\n    }),\r\n\r\n    \r\n\r\n    //hàm lấy dữ liệu từ form khi submit\r\n    handleSubmit: (values, {props, setSubmitting }) => {\r\n        console.log(\"values\", values);\r\n        //!props lúc này vừa bao gồm props của formik vừa bao gồm props của redux\r\n        // console.log(\"props\", props);\r\n\r\n\r\n        // let action = {\r\n        //     type: USER_SIGNIN_CYBERBUGS_API,\r\n        //     userLogin: {\r\n        //         email: values.email,\r\n        //         password: values.password,\r\n        //     }\r\n        // }\r\n\r\n        //?truyền thêm prop history của Route đến saga để thực hiện redirect đến trang home nếu đăng nhập thành công\r\n        //?redirect C1: truyền prop history\r\n        // props.dispatch(signinCyberBugsAction(values.email, values.password,props.history));\r\n        props.dispatch(signinCyberBugsAction(values.email, values.password));\r\n\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().required('Email không được để trống').email('email không hợp lệ'),\r\n        password: Yup.string().required('password không được để trống').min(5,'password không được nhỏ hơn 6 kí tự').max(15,'password không được lơn hơn 15 kí tự'),\r\n\r\n    }),\r\n\r\n    displayName: 'LoginCyberBugs',\r\n\r\n  })(LoginCyberBugs);\r\n\r\n\r\n//hàm connect cho phép chuyển đổi các props của thư viện redux thành props của component HOC LoginCyberBugs\r\nexport default connect() (LoginCyberBugsWithFormik);"]},"metadata":{},"sourceType":"module"}