{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chun Folder\\\\Test web html\\\\Cyberbugs1\\\\src\\\\pages\\\\CyberBugs\\\\ProjectCyberBugs\\\\CreateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport ProjectCategoryReducer from '../../../redux/reducers/ProjectCategoryReducer'; //!props của component CreateProject vừa bao gồm prop của formik vừa prop của connect vừa prop của route vừa prop của component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateProject(props) {\n  _s();\n\n  // console.log(\"props of CreateProject\", props);\n  // console.log(\"helu\")\n  //lấy mảng category từ redux Store về\n  const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory); // console.log(\"arrProjectCategory\", arrProjectCategory)\n\n  const dispatch = useDispatch();\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setValues,\n    //cho phép set lại nguyên cả object values khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\n    setFieldValue //cho phép set lại value của 1 field nào đó, còn value các trường còn lại giữ nguyên, khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\n\n  } = props;\n\n  const handleEditorChange = (content, editor) => {\n    // console.log(\"props of CreateProject\", props);\n    // console.log(\"content was updated\", content);\n    // console.log(\"content was updated\", editor);\n    setFieldValue('description', content);\n  }; //lúc mới vào trang web thì dispatch action call api để lấy về các product category rồi lưu vào redux Store\n\n\n  useEffect(() => {\n    // console.log(\"useEffect dispatch\");\n    //dispatch action api lên saga\n    dispatch({\n      type: 'GET_ALL_PROJECT_CATEGORY_SAGA'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CreateProject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          onChange: handleChange,\n          name: \"projectName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            name: \"description\",\n            initialValue: \"<p>This is the description of your project.</p>\",\n            init: {\n              height: 500,\n              menubar: false,\n              plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n              toolbar: 'undo redo | formatselect | ' + 'bold italic backcolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            },\n            onEditorChange: handleEditorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          name: \"categoryId\",\n          onChange: handleChange,\n          children: arrProjectCategory.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.id,\n              children: item.projectCategoryName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        children: \"Create project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n} //!component createProjectForm là HOC của component CreateProject\n\n\n_s(CreateProject, \"rkqqlJ7x+2b7PY3DsriMR+sBp5A=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CreateProject;\nconst createProjectForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => {\n    var _props$arrProjectCate;\n\n    // console.log(\"mapPropsToValues\");\n    console.log(\"props in withFormik\", props);\n    return {\n      projectName: '',\n      description: '',\n      categoryId: (_props$arrProjectCate = props.arrProjectCategory[0]) === null || _props$arrProjectCate === void 0 ? void 0 : _props$arrProjectCate.id\n    };\n  },\n  validationSchema: Yup.object().shape({}),\n  handleSubmit: (values, {\n    props,\n    setSubmitting\n  }) => {\n    console.log(\"values\", values); // console.log(\"props in handleSubmit withFormik\", props)\n    //dispatch action saga\n\n    props.dispatch({\n      type: 'CREATE_PROJECT_SAGA',\n      newProject: values\n    });\n  },\n  displayName: 'CreateProjectFormik'\n})(CreateProject);\n\nconst mapStateToProps = state => {\n  // console.log(\"mapStateToProps\");\n  return {\n    //Lấy ra mangr arrProjectCategory từ reduxStore về\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\n  };\n};\n\nexport default connect(mapStateToProps)(createProjectForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProject\");","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/pages/CyberBugs/ProjectCyberBugs/CreateProject.js"],"names":["React","useEffect","Editor","connect","useSelector","useDispatch","withFormik","Yup","ProjectCategoryReducer","CreateProject","props","arrProjectCategory","state","dispatch","values","touched","errors","handleChange","handleBlur","handleSubmit","setValues","setFieldValue","handleEditorChange","content","editor","type","height","menubar","plugins","toolbar","content_style","map","item","index","id","projectCategoryName","createProjectForm","enableReinitialize","mapPropsToValues","console","log","projectName","description","categoryId","validationSchema","object","shape","setSubmitting","newProject","displayName","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport ProjectCategoryReducer from '../../../redux/reducers/ProjectCategoryReducer';\r\n\r\n\r\n\r\n//!props của component CreateProject vừa bao gồm prop của formik vừa prop của connect vừa prop của route vừa prop của component\r\nfunction CreateProject(props) {\r\n\r\n    // console.log(\"props of CreateProject\", props);\r\n    // console.log(\"helu\")\r\n\r\n\r\n    //lấy mảng category từ redux Store về\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    // console.log(\"arrProjectCategory\", arrProjectCategory)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,     //cho phép set lại nguyên cả object values khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\r\n        setFieldValue  //cho phép set lại value của 1 field nào đó, còn value các trường còn lại giữ nguyên, khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\r\n    } = props;\r\n\r\n\r\n\r\n\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        // console.log(\"props of CreateProject\", props);\r\n        // console.log(\"content was updated\", content);\r\n        // console.log(\"content was updated\", editor);\r\n        setFieldValue('description', content);\r\n    }\r\n\r\n\r\n    //lúc mới vào trang web thì dispatch action call api để lấy về các product category rồi lưu vào redux Store\r\n    useEffect(()=> {\r\n        // console.log(\"useEffect dispatch\");\r\n        //dispatch action api lên saga\r\n        dispatch({type: 'GET_ALL_PROJECT_CATEGORY_SAGA',})\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h3>CreateProject</h3>\r\n            <form className=\"container\"onSubmit={handleSubmit} >\r\n                <div className=\"form-group\">\r\n                    <p>Name</p>\r\n                    <input className=\"form-control\"\r\n                        onChange = {handleChange} name = \"projectName\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Description</p>\r\n                    <input className=\"form-control\" name = \"description\"/>\r\n                    <>\r\n                        <Editor\r\n                            name = \"description\"\r\n                            initialValue=\"<p>This is the description of your project.</p>\"\r\n                            init={{\r\n                            height: 500,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                'advlist autolink lists link image charmap print preview anchor',\r\n                                'searchreplace visualblocks code fullscreen',\r\n                                'insertdatetime media table paste code help wordcount'\r\n                            ],\r\n                            toolbar: 'undo redo | formatselect | ' +\r\n                            'bold italic backcolor | alignleft aligncenter ' +\r\n                            'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                             'removeformat | help',\r\n                            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                            }}\r\n                            onEditorChange={handleEditorChange}\r\n                        />\r\n                    </>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select className=\"form-control\" name = \"categoryId\" \r\n                        onChange = {handleChange}>\r\n                       \r\n                        {arrProjectCategory.map((item, index) => {\r\n                            return <option key ={index} value = {item.id}>{item.projectCategoryName}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <button className=\"btn btn-success\" type =\"submit\">Create project</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n//!component createProjectForm là HOC của component CreateProject\r\nconst createProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        // console.log(\"mapPropsToValues\");\r\n        console.log(\"props in withFormik\", props)\r\n\r\n\r\n      return {\r\n        projectName: '',\r\n        description: '',\r\n        categoryId: props.arrProjectCategory[0]?.id,\r\n      }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        console.log(\"values\", values);\r\n        // console.log(\"props in handleSubmit withFormik\", props)\r\n        //dispatch action saga\r\n        props.dispatch({\r\n            type: 'CREATE_PROJECT_SAGA',\r\n            newProject: values,\r\n        })\r\n    },\r\n    displayName: 'CreateProjectFormik',\r\n})(CreateProject);\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    // console.log(\"mapStateToProps\");\r\n    return {\r\n            //Lấy ra mangr arrProjectCategory từ reduxStore về\r\n            arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory,\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps) (createProjectForm);"]},"metadata":{},"sourceType":"module"}