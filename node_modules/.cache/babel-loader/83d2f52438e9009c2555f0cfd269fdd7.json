{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chun Folder\\\\Test web html\\\\Cyberbugs1\\\\src\\\\components\\\\Form\\\\FormEditProject\\\\FormEditProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormEditProject(props) {\n  _s();\n\n  // const [useState, setState] = useState();\n  const dispatch = useDispatch();\n  console.log(\"props of HOC EditProjectForm\", props);\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setValues,\n    //cho phép set lại nguyên cả object values khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\n    setFieldValue //cho phép set lại value của 1 field nào đó, còn value các trường còn lại giữ nguyên, khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\n\n  } = props;\n  console.log(\"values in HOC EditProjectForm\", values);\n  const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n  console.log(\"arrProjectCategory\", arrProjectCategory);\n  useEffect(() => {\n    //khi coomponent FormEditProject đc render thì đầu tiên phải dispatch saga để lấy đc mảng arrProjectCategory để hiển thị các thẻ option\n    dispatch({\n      type: 'GET_ALL_PROJECT_CATEGORY_SAGA'\n    }); //!khi bấm vào nút edit của component ProjectManagement thì dispatch hàm handleSubmit của formik ở component FormEditProject \n    // lên DrawerCyberbugsReducer, để component ModalCyberbugs kéo về hàm callBackSubmit mới khi click vào submit của component ModalCyberbugsư\n\n    const action = {\n      type: 'SET_SUBMIT_EDIT_PROJECT',\n      submitFunction: handleSubmit\n    };\n    dispatch(action);\n  }, []);\n\n  const handleEditorChange = (content, editor) => {\n    console.log(\"handleEditorChange\", content);\n    setFieldValue('description', content);\n  }; // const submitForm = (event) => {\n  //     event.preventDefault();\n  //     console.log(\"chạy hàm submit\");\n  //     alert(\"submit edit\");\n  // }\n\n\n  console.log(\"run component FormEditProject\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-fluid\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-weight-bold\",\n            children: \"Project Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: values.id,\n            disabled: true,\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-weight-bold\",\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: values.projectName,\n            className: \"form-control\",\n            type: \"text\",\n            name: \"projectName\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-weight-bold\",\n            children: \"Project Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"categoryId\",\n            value: values.categoryId,\n            onChange: handleChange,\n            children: arrProjectCategory.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.projectCategoryName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-weight-bold\",\n            children: \"Project Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            name: \"descriptionEdit\",\n            initialValue: values.description,\n            value: values.description,\n            init: {\n              height: 500,\n              menubar: false,\n              plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n              toolbar: 'undo redo | formatselect | ' + 'bold italic backcolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            },\n            onEditorChange: handleEditorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormEditProject, \"hpeYU+/xfIHolST2NJyVsdQHYZs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FormEditProject;\nconst EditProjectForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => {\n    // console.log(\"mapPropsToValues\");\n    //?component EditProjectForm đc bỏ trong hàm connect = > tạo ra props có hàm dispatch\n    console.log(\"props in withFormik of EditProjectForm\", props);\n    const {\n      projectEdit\n    } = props; //cái gì đc return ở hàm mapPropsToValues của withFormik chính là gtri props.values\n\n    return {\n      id: projectEdit === null || projectEdit === void 0 ? void 0 : projectEdit.id,\n      projectName: projectEdit === null || projectEdit === void 0 ? void 0 : projectEdit.projectName,\n      description: projectEdit === null || projectEdit === void 0 ? void 0 : projectEdit.description,\n      categoryId: projectEdit === null || projectEdit === void 0 ? void 0 : projectEdit.categoryId\n    };\n  },\n  validationSchema: Yup.object().shape({}),\n  handleSubmit: (values, {\n    props,\n    setSubmitting\n  }) => {\n    //values chính là gtri của ng dùng sau khi thay đổi\n    console.log(\"values in handleSubmit\", values); //khi người dùng bấm submit ==> đưa dữ liệu về backend thông qua api\n\n    const action = {\n      type: 'UPDATE_PROJECT_SAGA',\n      projectUpdate: values\n    }; //gọi saga\n\n    props.dispatch(action);\n  },\n  displayName: 'EditProjectForm'\n})(FormEditProject);\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToProps\");\n  return {\n    projectEdit: state.ProjectReducer.projectEdit\n  };\n};\n\nexport default connect(mapStateToProps)(EditProjectForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormEditProject\");","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/components/Form/FormEditProject/FormEditProject.js"],"names":["React","useState","useEffect","Editor","connect","useSelector","useDispatch","withFormik","Yup","FormEditProject","props","dispatch","console","log","values","touched","errors","handleChange","handleBlur","handleSubmit","setValues","setFieldValue","arrProjectCategory","state","ProjectCategoryReducer","type","action","submitFunction","handleEditorChange","content","editor","id","projectName","categoryId","map","item","index","projectCategoryName","description","height","menubar","plugins","toolbar","content_style","EditProjectForm","enableReinitialize","mapPropsToValues","projectEdit","validationSchema","object","shape","setSubmitting","projectUpdate","displayName","mapStateToProps","ProjectReducer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nfunction FormEditProject(props) {\r\n    // const [useState, setState] = useState();\r\n    const dispatch = useDispatch();\r\n    console.log(\"props of HOC EditProjectForm\", props);\r\n\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,     //cho phép set lại nguyên cả object values khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\r\n        setFieldValue  //cho phép set lại value của 1 field nào đó, còn value các trường còn lại giữ nguyên, khi submit mà không cần thông qua handle change, có thể gọi hàm này để set lại value ở bất cứ hàm nào\r\n    } = props;\r\n    console.log(\"values in HOC EditProjectForm\", values);\r\n\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    console.log(\"arrProjectCategory\", arrProjectCategory)\r\n\r\n\r\n    useEffect(() => {\r\n        //khi coomponent FormEditProject đc render thì đầu tiên phải dispatch saga để lấy đc mảng arrProjectCategory để hiển thị các thẻ option\r\n        dispatch({type: 'GET_ALL_PROJECT_CATEGORY_SAGA'})\r\n\r\n\r\n        //!khi bấm vào nút edit của component ProjectManagement thì dispatch hàm handleSubmit của formik ở component FormEditProject \r\n        // lên DrawerCyberbugsReducer, để component ModalCyberbugs kéo về hàm callBackSubmit mới khi click vào submit của component ModalCyberbugsư\r\n        const action = {\r\n            type: 'SET_SUBMIT_EDIT_PROJECT',\r\n            submitFunction: handleSubmit,\r\n        }\r\n        dispatch(action);\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        console.log(\"handleEditorChange\", content);\r\n        setFieldValue('description', content);\r\n\r\n    }\r\n    \r\n\r\n\r\n    // const submitForm = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(\"chạy hàm submit\");\r\n    //     alert(\"submit edit\");\r\n    // }\r\n\r\n    console.log(\"run component FormEditProject\");\r\n\r\n\r\n    return (\r\n        <form className = \"container-fluid\" onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <h5 className=\"font-weight-bold\">Project Id</h5>\r\n                        <input value = {values.id} disabled className=\"form-control\" type = \"text\" name = \"id\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <h5 className=\"font-weight-bold\">Project Name</h5>\r\n                        <input value = {values.projectName} className=\"form-control\" type = \"text\"\r\n                         name = \"projectName\" onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <h5 className=\"font-weight-bold\">Project Category</h5>\r\n                        <select name = \"categoryId\" value = {values.categoryId} onChange={handleChange}>\r\n                            {arrProjectCategory.map((item, index) => {\r\n                                return <option value = {item.id} key = {index}>\r\n                                    {item.projectCategoryName}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className = \"col-12\">\r\n                    <div className=\"form-group\">\r\n                    <h5 className=\"font-weight-bold\">Project Description</h5>\r\n                        <Editor\r\n                                name = \"descriptionEdit\"\r\n                                initialValue={values.description}\r\n                                value={values.description}\r\n                                init={{\r\n                                height: 500,\r\n                                menubar: false,\r\n                                plugins: [\r\n                                    'advlist autolink lists link image charmap print preview anchor',\r\n                                    'searchreplace visualblocks code fullscreen',\r\n                                    'insertdatetime media table paste code help wordcount'\r\n                                ],\r\n                                toolbar: 'undo redo | formatselect | ' +\r\n                                'bold italic backcolor | alignleft aligncenter ' +\r\n                                'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                                'removeformat | help',\r\n                                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                                }}\r\n                                onEditorChange={handleEditorChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst EditProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        // console.log(\"mapPropsToValues\");\r\n        //?component EditProjectForm đc bỏ trong hàm connect = > tạo ra props có hàm dispatch\r\n        console.log(\"props in withFormik of EditProjectForm\", props);\r\n        const {projectEdit} = props;\r\n\r\n        //cái gì đc return ở hàm mapPropsToValues của withFormik chính là gtri props.values\r\n      return {\r\n        id: projectEdit?.id,\r\n        projectName: projectEdit?.projectName,\r\n        description: projectEdit?.description,\r\n        categoryId: projectEdit?.categoryId,\r\n      }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        //values chính là gtri của ng dùng sau khi thay đổi\r\n        console.log(\"values in handleSubmit\", values);\r\n        //khi người dùng bấm submit ==> đưa dữ liệu về backend thông qua api\r\n        const action = {\r\n            type: 'UPDATE_PROJECT_SAGA',\r\n            projectUpdate: values,\r\n        }\r\n        //gọi saga\r\n        props.dispatch(action);\r\n\r\n    },\r\n    displayName: 'EditProjectForm',\r\n})(FormEditProject);\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"mapStateToProps\")\r\n    return {\r\n        projectEdit: state.ProjectReducer.projectEdit,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps) (EditProjectForm);"]},"metadata":{},"sourceType":"module"}