{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chun Folder\\\\Test web html\\\\Cyberbugs1\\\\src\\\\pages\\\\TodoList\\\\TodoListRFC.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Axios from 'axios';\nimport style from './TodoList.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoListRFC() {\n  _s();\n\n  const [state, setState] = useState({\n    taskList: [],\n    values: {\n      taskName: ''\n    },\n    errors: {\n      taskName: ''\n    }\n  });\n  console.log(\"state in RFC\", state);\n\n  const getTaskList = () => {\n    //Axios trả về 1 promise\n    let promise = Axios({\n      url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n      method: 'GET'\n    });\n    promise.then(response => {\n      console.log(\"response\", response.data); //? Nếu gọi api lấy về mảng taskList thì set lại state taskList vs mảng đc lấy về\n\n      setState({ ...state,\n        taskList: response.data\n      });\n    });\n    promise.catch(error => {\n      console.log(\"error\", error);\n    });\n  }; //mặc định sau khi hàm render chạy xong thì sẽ chạy hàm này\n\n\n  useEffect(() => {\n    getTaskList();\n    return () => {};\n  }, []);\n\n  const renderTaskTodo = () => {\n    return state.taskList.filter(task => !task.status).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove\",\n            type: \"button\",\n            onClick: () => {\n              deleteTask(task.taskName);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"complete\",\n            type: \"button\",\n            onClick: () => {\n              checkTask(task.taskName);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-check-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const renderTaskTodoDone = () => {\n    return state.taskList.filter(task => task.status).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove\",\n            type: \"button\",\n            onClick: () => {\n              deleteTask(task.taskName);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"complete\",\n            onClick: () => {\n              rejectTask(task.taskName);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-undo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-undo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const handleChange = e => {\n    let {\n      value,\n      name\n    } = e.target;\n    console.log(value, name);\n    let newValues = { ...state.values\n    };\n    newValues = { ...newValues,\n      [name]: value\n    };\n    let newErrors = { ...state.errors\n    };\n    let regexString = /^[a-z A-Z]+$/;\n\n    if (!regexString.test(value) || value.trim() === '') {\n      newErrors[name] = name + ' invalid !';\n    } else {\n      newErrors[name] = '';\n    }\n\n    setState({ ...state,\n      values: newValues,\n      errors: newErrors\n    });\n  };\n\n  const addTask = e => {\n    e.preventDefault();\n    let promise = Axios({\n      url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n      method: 'POST',\n      data: {\n        taskName: state.values.taskName\n      } //gửi lên serve 1 task mới\n\n    });\n    promise.then(response => {\n      // console.log(\"response\", response);\n      //sau khi đưa dữ liệu thành công lên serve thì gọi hàm getTaskList lại để load lại danh sách taskList(bao gồm taskName)\n      getTaskList();\n    });\n    promise.catch(errors => {\n      alert(errors.response.data); //task name is already exists!\n    });\n  }; //hàm xóa task\n\n\n  const deleteTask = taskName => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n      method: 'DELETE'\n    });\n    promise.then(response => {\n      console.log(\"response\", response);\n      getTaskList();\n    });\n    promise.catch(errors => {\n      console.log(errors.response.data);\n    });\n  }; //xử lí done task\n\n\n  const checkTask = taskName => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n      method: 'PUT'\n    });\n    promise.then(response => {\n      console.log(\"response\", response);\n      getTaskList();\n    });\n    promise.catch(errors => {\n      console.log(errors.response.data);\n    });\n  }; //xử lí undoTask đã hoàn thành \n\n\n  const rejectTask = taskName => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n      method: 'PUT'\n    });\n    promise.then(response => {\n      console.log(\"response\", response);\n      getTaskList();\n    });\n    promise.catch(errors => {\n      console.log(errors.response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('./bg.png')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"card__body\",\n      onSubmit: addTask,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"September 9,2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__add\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newTask\",\n            name: \"taskName\",\n            onChange: handleChange,\n            type: \"text\",\n            placeholder: \"Enter an activity...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"addItem\",\n            type: \"button\",\n            onClick: addTask,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [\" \", state.errors.taskName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"todo\",\n            id: \"todo\",\n            children: renderTaskTodo()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"todo\",\n            id: \"completed\",\n            children: renderTaskTodoDone()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoListRFC, \"Jh2P9O+NaQ32qr7yAuQTuUwSNKU=\");\n\n_c = TodoListRFC;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListRFC\");","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/pages/TodoList/TodoListRFC.js"],"names":["React","Axios","style","useState","useEffect","TodoListRFC","state","setState","taskList","values","taskName","errors","console","log","getTaskList","promise","url","method","then","response","data","catch","error","renderTaskTodo","filter","task","status","map","index","deleteTask","checkTask","renderTaskTodoDone","rejectTask","handleChange","e","value","name","target","newValues","newErrors","regexString","test","trim","addTask","preventDefault","alert","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport style from './TodoList.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function TodoListRFC() {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        taskList: [],\r\n        values: {\r\n            taskName: '',\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    })\r\n\r\n\r\n    console.log(\"state in RFC\", state)\r\n\r\n\r\n    const getTaskList = () => {\r\n        //Axios trả về 1 promise\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET',\r\n        });\r\n        promise.then((response) => {\r\n            console.log(\"response\", response.data);\r\n            //? Nếu gọi api lấy về mảng taskList thì set lại state taskList vs mảng đc lấy về\r\n            setState({\r\n                ...state,\r\n                taskList: response.data,\r\n            })\r\n        });\r\n\r\n        promise.catch((error) => {\r\n            console.log(\"error\", error);\r\n        })\r\n    }\r\n\r\n\r\n    //mặc định sau khi hàm render chạy xong thì sẽ chạy hàm này\r\n    useEffect(() => {\r\n       getTaskList();\r\n       return () => {\r\n\r\n       }\r\n    }, [])\r\n\r\n\r\n    const renderTaskTodo = () => {\r\n        return state.taskList.filter(task => !task.status).map((task, index) => {\r\n            return  <li key = {index}>\r\n                        <span>{task.taskName}</span>\r\n                        <div className=\"buttons\">\r\n                        <button className=\"remove\" type = \"button\" onClick={ () => {deleteTask(task.taskName)}}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button className=\"complete\" type = \"button\" onClick = {() => {checkTask(task.taskName)}}>\r\n                            <i className=\"far fa-check-circle\" />\r\n                            <i className=\"fas fa-check-circle\" />\r\n                        </button>\r\n                        </div>\r\n                    </li>\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    const renderTaskTodoDone = () => {\r\n        return state.taskList.filter(task=> task.status).map((task, index) => {\r\n            return  <li key = {index}>\r\n                        <span>{task.taskName}</span>\r\n                        <div className=\"buttons\">\r\n                        <button className=\"remove\" type = \"button\" onClick={ () => {deleteTask(task.taskName)}}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button type = \"button\" className=\"complete\" onClick = {()=> {rejectTask(task.taskName)}}>\r\n                            <i className=\"far fa-undo\" />\r\n                            <i className=\"fas fa-undo\" />\r\n                        </button>\r\n                        </div>\r\n                    </li> \r\n          \r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        let { value, name } = e.target;\r\n        console.log(value, name);\r\n        let newValues = { ...state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: {taskName: state.values.taskName},  //gửi lên serve 1 task mới\r\n        });\r\n        promise.then((response) => {\r\n            // console.log(\"response\", response);\r\n            //sau khi đưa dữ liệu thành công lên serve thì gọi hàm getTaskList lại để load lại danh sách taskList(bao gồm taskName)\r\n            getTaskList();\r\n        })\r\n\r\n        promise.catch((errors) => {\r\n            alert(errors.response.data);     //task name is already exists!\r\n        })\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    //hàm xóa task\r\n    const deleteTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE',\r\n        })\r\n\r\n        promise.then((response) => {\r\n            console.log(\"response\", response);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch((errors) => {\r\n            console.log(errors.response.data); \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    //xử lí done task\r\n    const checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n\r\n        promise.then((response) => {\r\n            console.log(\"response\", response);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch((errors) => {\r\n            console.log(errors.response.data); \r\n        })\r\n    }\r\n\r\n\r\n\r\n    //xử lí undoTask đã hoàn thành \r\n\r\n    const rejectTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n\r\n        promise.then((response) => {\r\n            console.log(\"response\", response);\r\n            getTaskList();\r\n        });\r\n\r\n        promise.catch((errors) => {\r\n            console.log(errors.response.data); \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__header\">\r\n                <img src={require('./bg.png')} />\r\n            </div>\r\n            {/* <h2>hello!</h2> */}\r\n            <form className=\"card__body\" onSubmit = {addTask}>\r\n                <div className=\"card__content\">\r\n                <div className=\"card__title\">\r\n                    <h2>My Tasks</h2>\r\n                    <p>September 9,2020</p>\r\n                </div>\r\n                <div className=\"card__add\">\r\n                    <input id=\"newTask\" name = \"taskName\" onChange = {handleChange} \r\n                     type=\"text\" placeholder=\"Enter an activity...\" />\r\n                    <button id=\"addItem\" type = \"button\" onClick = {addTask}>\r\n                    <i className=\"fa fa-plus\" />\r\n                    </button>\r\n                </div>\r\n                <p className=\"text-danger\"> {state.errors.taskName}</p>\r\n\r\n                <div className=\"card__todo\">\r\n                    {/* Uncompleted tasks */}\r\n                    <ul className=\"todo\" id=\"todo\">\r\n                        {renderTaskTodo()}\r\n                    </ul>\r\n                    {/* Completed tasks */}\r\n                    <ul className=\"todo\" id=\"completed\">\r\n                        {renderTaskTodoDone()}\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </form>\r\n    </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}