{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chun Folder\\\\Test web html\\\\Cyberbugs1\\\\src\\\\pages\\\\CyberBugs\\\\ProjectCyberBugs\\\\ProjectManagement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Table, Button, Space } from \"antd\";\nimport ReactHtmlParser from \"html-react-parser\"; //thư viện cho phép parse từ html tag sang jsx tag\n\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Tag, Divider } from \"antd\";\nimport FormEditProject from \"./../../../components/Form/FormEditProject/FormEditProject\";\nimport { Popconfirm, message } from \"antd\";\nimport { Avatar, Image, Popover, AutoComplete } from 'antd';\nimport UserCyberBugsReducer from './../../../redux/reducers/UserCyberBugsReducer';\nimport { NavLink } from \"react-router-dom\"; // const confirm = (e) => {\n//   console.log(e);\n//   message.success(\"Click on Yes\");\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cancel = e => {\n  console.log(e);\n  message.error(\"Click on No\");\n};\n\nexport default function ProjectManagement(props) {\n  _s();\n\n  //lấy projectList từ reducer về\n  const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList); //lấy userSearch từ UserCyberBugsReducer về\n\n  const {\n    userSearchList\n  } = useSelector(state => state.UserCyberBugsReducer); //*tạo state để thay đổi giao diện từ userId => name khi ng dùng search để thêm member vào dự án\n\n  const [value, setValue] = useState('Nhập tên member'); //!sử dụng debounce search\n\n  const searchRef = useRef(null);\n  const [state, setState] = useState({\n    filteredInfo: null,\n    sortedInfo: null\n  }); //sử dụng useDispatch để gọi action\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"useEffect\");\n    dispatch({\n      type: \"GET_PROJECT_LIST_SAGA\"\n    });\n  });\n  console.log(\"test\");\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log(\"Various parameters\", pagination, filters, sorter);\n    setState({\n      filteredInfo: filters,\n      sortedInfo: sorter\n    });\n  };\n\n  const clearFilters = () => {\n    setState({\n      filteredInfo: null\n    });\n  };\n\n  const clearAll = () => {\n    setState({\n      filteredInfo: null,\n      sortedInfo: null\n    });\n  };\n\n  const setAgeSort = () => {\n    setState({\n      sortedInfo: {\n        order: \"descend\",\n        columnKey: \"age\"\n      }\n    });\n  };\n\n  let {\n    sortedInfo,\n    filteredInfo\n  } = state;\n  sortedInfo = sortedInfo || {};\n  filteredInfo = filteredInfo || {};\n  const columns = [{\n    title: \"Id\",\n    dataIndex: \"id\",\n    key: \"id\",\n    sorter: (item2, item1) => {\n      //id là sắp xếp theo kiểu number\n      return item2.id - item1.id;\n    },\n    sortDirections: [\"descend\"]\n  }, {\n    title: \"projectName\",\n    dataIndex: \"projectName\",\n    key: \"projectName\",\n    //truyền id của project vào đường link của thẻ navlink\n    render: (text, record, index) => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/projectdetail/${record.id}`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }, this);\n    },\n    sorter: (item2, item1) => {\n      let projectName1 = item1.projectName.trim().toLowerCase();\n      let projectName2 = item2.projectName.trim().toLowerCase();\n\n      if (projectName2 < projectName1) {\n        return -1;\n      }\n\n      return 1;\n    }\n  }, {\n    title: \"creator\",\n    //   dataIndex: 'creator',\n    key: \"creator\",\n    render: (text, record, index) => {\n      var _record$creator;\n\n      // console.log(\"run render\")\n      // console.log(\"text in creator\", text);\n      // console.log(\"record\", record);\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"green\",\n        children: (_record$creator = record.creator) === null || _record$creator === void 0 ? void 0 : _record$creator.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this);\n    },\n    sorter: (item2, item1) => {\n      let creator1 = item1.creator.name.trim().toLowerCase();\n      let creator2 = item2.creator.name.trim().toLowerCase();\n\n      if (creator2 < creator1) {\n        return -1; //dảo thứ tự\n      }\n\n      return 1; //giữ nguyên\n    }\n  }, {\n    title: \"CategoryName\",\n    dataIndex: \"categoryName\",\n    key: \"categoryName\",\n    sorter: (item2, item1) => {\n      let categoryName1 = item1.categoryName.trim().toLowerCase();\n      let categoryName2 = item2.categoryName.trim().toLowerCase();\n\n      if (categoryName2 < categoryName1) {\n        return -1; //dảo thứ tự\n      }\n\n      return 1; //giữ nguyên\n    }\n  }, {\n    title: \"description\",\n    dataIndex: \"description\",\n    key: \"description\",\n    render: (text, record, index) => {\n      //hàm render sẽ return ra thẻ jsx trên giao diện\n      // console.log(\"text description\",  text);\n      //   console.log(\"record\", record);\n      //   console.log(\"index\", index);\n      //?hàm HTMLReactParser nhận tham số là 1 string có dạng html tag\n      let jsxContent = ReactHtmlParser(text); //   console.log(\"jsxContent\", jsxContent);\n\n      if (typeof text !== \"string\") {\n        return \"not a a string\";\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: jsxContent\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, // {\n  //       title: 'description',\n  //       dataIndex: 'description',\n  //       key: 'description',\n  //       render: (text, record, index) => {\n  //           let contentJSX = ReactHtmlParser(text);\n  //           return <div>\n  //               {contentJSX}\n  //           </div>\n  //       }\n  //   },\n  {\n    title: \"Member\",\n    key: \"member\",\n    render: (text, record, index) => {\n      var _record$members, _record$members2;\n\n      // return <Avatar src=\"https://picsum.photos/50\" />;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [//? viết logic Js\n        (_record$members = record.members) === null || _record$members === void 0 ? void 0 : _record$members.slice(0, 3).map((member, index) => {\n          return /*#__PURE__*/_jsxDEV(Popover, {\n            placement: \"top\",\n            title: \"Members in project\",\n            content: () => {\n              return /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"userId\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Avatar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: record.members.map((member, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: member.userId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: member.avatar,\n                        width: \"30\",\n                        height: \"30\",\n                        style: {\n                          borderRadius: '50%'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: member.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-danger\",\n                        onClick: () => {\n                          const action = {\n                            type: 'DELETE_USER_PROJECT_SAGA',\n                            userProject: {\n                              userId: member.userId,\n                              projectId: record.id\n                            }\n                          };\n                          dispatch(action);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 32\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 26\n              }, this);\n            },\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: member.avatar\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 22\n          }, this);\n        }), ((_record$members2 = record.members) === null || _record$members2 === void 0 ? void 0 : _record$members2.length) > 3 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 41\n        }, this) : '', /*#__PURE__*/_jsxDEV(Popover, {\n          placement: \"rightTop\",\n          title: \"add User\",\n          content: () => {\n            return /*#__PURE__*/_jsxDEV(AutoComplete //thuộc tính options của AutoComplete chỉ cho phép nhận vào mảng gồm các đối tượng vs thuộc tính là label vàvalue nên phải biến đổi \n            //mảng userSearchList về mảng phù hợp, và thuộc tính value chỉ đc mang gtri kiểu string nên phải đồi userId (kiểu number) ==> kiểu string\n            , {\n              options: userSearchList === null || userSearchList === void 0 ? void 0 : userSearchList.map((user, index) => {\n                return {\n                  label: user.name,\n                  value: user.userId.toString()\n                };\n              }) //?mỗi khi ng dùng nhập thì gtri từ onChange sẽ đc setVale, ta lấy gtri đc thay đổi đó hiển lên ô input\n              ,\n              value: value,\n              onChange: text => {\n                console.log(\"vào hàm onChange\", text);\n                setValue(text);\n              },\n              onSelect: (valueSelect, option) => {\n                console.log(\" vào hàm onSelect\"); //*option chính là object gồm 2 thuộc tính label và value đc khai báo ở options attribute\n\n                console.log(\"value khi onSelect chính là userId\", value);\n                console.log(\"option of onSelect\", option); //!set giá trị trong hộp thoiaj bằng option.label (nghĩa là name của user)\n\n                setValue(option.label); //!tuy nhiên api khi gửi về backend thì cần userId của member(option.value) chứ k phải name(option.label)\n\n                dispatch({\n                  type: 'ADD_USER_PROJECT_SAGA',\n                  userProject: {\n                    \"projectId\": record.id,\n                    \"userId\": valueSelect\n                  }\n                });\n              },\n              className: \"w-100\",\n              onSearch: value => {\n                //VALUE ở dây chính là giá trị người dùng gõ vào\n                console.log(\"searchValue ở hàm onSearch\", value); //!nếu mỗi lần ng dùng search mà call api ngay lập tức có thể gây tràn RAM tại server => phải dùng debounce search\n                //lần đầu searchRef = null nên sẽ k chạy vào if\n                //mục đích => xóa searchRef.current của lần trước\n\n                if (searchRef.current) {\n                  clearTimeout(searchRef.current);\n                } //nếu tgian > 300ms thì mới call api\n\n\n                searchRef.current = setTimeout(() => {\n                  dispatch({\n                    type: 'GET_USER_CYBERBUGS_SAGA',\n                    keyWord: value\n                  });\n                }, 500);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 20\n            }, this);\n          },\n          trigger: \"click\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              borderRadius: '50%'\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record, index) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: () => {\n          const action = {\n            type: \"OPEN_FORM_EDIT_PROJECT\",\n            title: 'Edit Project',\n            Component: /*#__PURE__*/_jsxDEV(FormEditProject, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 28\n            }, this) // SubmitFunction:\n\n          };\n          dispatch(action); //dispatch dữ liệu dùng hiện tại\n\n          const actionEditProject = {\n            type: \"EDIT_PROJECT\",\n            projectEditModel: record\n          };\n          dispatch(actionEditProject);\n        },\n        children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n          style: {\n            fontSize: 17\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Are you sure to delete this project?\",\n        onConfirm: () => {\n          //nếu confirm đồng ý xóa thì mới dispatch action lên saga\n          dispatch({\n            type: \"DELETE_PROJECT_SAGA\",\n            idProject: record.id\n          });\n          console.log(record.id);\n        },\n        onCancel: cancel,\n        okText: \"Yes\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\" // onClick={() => {\n          //   dispatch({\n          //     type: \"DELETE_PROJECT_SAGA\",\n          //     idProject: record.id,\n          //   });\n          // }}\n          ,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: {\n              fontSize: 17\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), \",\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: setAgeSort,\n        children: \"Sort age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearFilters,\n        children: \"Clear filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clearAll,\n        children: \"Clear filters and sorters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rowKey: \"id\",\n      dataSource: projectList,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectManagement, \"rGdesgxhRKmfU03ZUiO9TVSU+Qs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProjectManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectManagement\");","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/pages/CyberBugs/ProjectCyberBugs/ProjectManagement.js"],"names":["React","useState","useEffect","useRef","Table","Button","Space","ReactHtmlParser","EditOutlined","DeleteOutlined","useSelector","useDispatch","Tag","Divider","FormEditProject","Popconfirm","message","Avatar","Image","Popover","AutoComplete","UserCyberBugsReducer","NavLink","cancel","e","console","log","error","ProjectManagement","props","projectList","state","ProjectCyberBugsReducer","userSearchList","value","setValue","searchRef","setState","filteredInfo","sortedInfo","dispatch","type","handleChange","pagination","filters","sorter","clearFilters","clearAll","setAgeSort","order","columnKey","columns","title","dataIndex","key","item2","item1","id","sortDirections","render","text","record","index","projectName1","projectName","trim","toLowerCase","projectName2","creator","name","creator1","creator2","categoryName1","categoryName","categoryName2","jsxContent","members","slice","map","member","userId","avatar","borderRadius","action","userProject","projectId","length","user","label","toString","valueSelect","option","current","clearTimeout","setTimeout","keyWord","Component","actionEditProject","projectEditModel","fontSize","idProject","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Table, Button, Space } from \"antd\";\r\nimport ReactHtmlParser from \"html-react-parser\"; //thư viện cho phép parse từ html tag sang jsx tag\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Tag, Divider } from \"antd\";\r\nimport FormEditProject from \"./../../../components/Form/FormEditProject/FormEditProject\";\r\nimport { Popconfirm, message } from \"antd\";\r\nimport { Avatar, Image, Popover, AutoComplete } from 'antd';\r\nimport UserCyberBugsReducer from './../../../redux/reducers/UserCyberBugsReducer';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n// const confirm = (e) => {\r\n//   console.log(e);\r\n//   message.success(\"Click on Yes\");\r\n\r\n// };\r\n\r\nconst cancel = (e) => {\r\n  console.log(e);\r\n  message.error(\"Click on No\");\r\n};\r\n\r\nexport default function ProjectManagement(props) {\r\n  //lấy projectList từ reducer về\r\n  const projectList = useSelector(\r\n    (state) => state.ProjectCyberBugsReducer.projectList\r\n  );\r\n\r\n\r\n  //lấy userSearch từ UserCyberBugsReducer về\r\n  const { userSearchList } = useSelector(state => state.UserCyberBugsReducer);\r\n\r\n\r\n  //*tạo state để thay đổi giao diện từ userId => name khi ng dùng search để thêm member vào dự án\r\n  const [value, setValue] = useState('Nhập tên member');\r\n\r\n\r\n\r\n  //!sử dụng debounce search\r\n  const searchRef = useRef(null);\r\n\r\n\r\n\r\n  const [state, setState] = useState({\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  });\r\n\r\n  //sử dụng useDispatch để gọi action\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    dispatch({\r\n      type: \"GET_PROJECT_LIST_SAGA\",\r\n    });\r\n  });\r\n\r\n  console.log(\"test\");\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setState({ filteredInfo: null });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  const setAgeSort = () => {\r\n    setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\",\r\n      },\r\n    });\r\n  };\r\n\r\n  let { sortedInfo, filteredInfo } = state;\r\n\r\n  sortedInfo = sortedInfo || {};\r\n  filteredInfo = filteredInfo || {};\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      sorter: (item2, item1) => {\r\n        //id là sắp xếp theo kiểu number\r\n        return item2.id - item1.id;\r\n      },\r\n      sortDirections: [\"descend\"],\r\n    },\r\n\r\n    {\r\n      title: \"projectName\",\r\n      dataIndex: \"projectName\",\r\n      key: \"projectName\",\r\n      //truyền id của project vào đường link của thẻ navlink\r\n      render: (text, record, index) => {\r\n        return <NavLink to={`/projectdetail/${record.id}`}>{text}</NavLink>\r\n      },\r\n      sorter: (item2, item1) => {\r\n        let projectName1 = item1.projectName.trim().toLowerCase();\r\n        let projectName2 = item2.projectName.trim().toLowerCase();\r\n        if (projectName2 < projectName1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n    {\r\n      title: \"creator\",\r\n      //   dataIndex: 'creator',\r\n      key: \"creator\",\r\n      render: (text, record, index) => {\r\n        // console.log(\"run render\")\r\n\r\n        // console.log(\"text in creator\", text);\r\n        // console.log(\"record\", record);\r\n        return (\r\n          <Tag color=\"green\" key={index}>\r\n            {record.creator?.name}\r\n          </Tag>\r\n        );\r\n      },\r\n      sorter: (item2, item1) => {\r\n        let creator1 = item1.creator.name.trim().toLowerCase();\r\n        let creator2 = item2.creator.name.trim().toLowerCase();\r\n        if (creator2 < creator1) {\r\n          return -1; //dảo thứ tự\r\n        }\r\n        return 1; //giữ nguyên\r\n      },\r\n    },\r\n    {\r\n      title: \"CategoryName\",\r\n      dataIndex: \"categoryName\",\r\n      key: \"categoryName\",\r\n      sorter: (item2, item1) => {\r\n        let categoryName1 = item1.categoryName.trim().toLowerCase();\r\n        let categoryName2 = item2.categoryName.trim().toLowerCase();\r\n        if (categoryName2 < categoryName1) {\r\n          return -1; //dảo thứ tự\r\n        }\r\n        return 1; //giữ nguyên\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      render: (text, record, index) => {\r\n        //hàm render sẽ return ra thẻ jsx trên giao diện\r\n        // console.log(\"text description\",  text);\r\n        //   console.log(\"record\", record);\r\n        //   console.log(\"index\", index);\r\n        //?hàm HTMLReactParser nhận tham số là 1 string có dạng html tag\r\n        let jsxContent = ReactHtmlParser(text);\r\n        //   console.log(\"jsxContent\", jsxContent);\r\n        if (typeof text !== \"string\") {\r\n          return \"not a a string\";\r\n        } else {\r\n          return <div key={index}>{jsxContent}</div>;\r\n        }\r\n      },\r\n    },\r\n\r\n    // {\r\n    //       title: 'description',\r\n    //       dataIndex: 'description',\r\n    //       key: 'description',\r\n    //       render: (text, record, index) => {\r\n    //           let contentJSX = ReactHtmlParser(text);\r\n\r\n    //           return <div>\r\n    //               {contentJSX}\r\n    //           </div>\r\n    //       }\r\n    //   },\r\n\r\n\r\n\r\n\r\n    {\r\n\r\n      title: \"Member\",\r\n      key: \"member\",\r\n      render: (text, record, index) => {\r\n        // return <Avatar src=\"https://picsum.photos/50\" />;\r\n        return <div>\r\n          {\r\n            //? viết logic Js\r\n            record.members?.slice(0, 3).map((member, index) => {\r\n              return <Popover placement=\"top\" title=\"Members in project\" key={index}\r\n                content={() => {\r\n                  return <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td>userId</td>\r\n                        <td>Avatar</td>\r\n                        <td>Name</td>\r\n                        <td>Action</td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {\r\n                        record.members.map((member, index) => (\r\n                          <tr key={index}>\r\n                            <td>{member.userId}</td>\r\n                            <td>\r\n                              <img src={member.avatar} width=\"30\" height=\"30\" style={{ borderRadius: '50%' }} />\r\n                            </td>\r\n                            <td>{member.name}</td>\r\n                            <td>\r\n                              <button className=\"btn btn-danger\"\r\n                                onClick={() => {\r\n                                  const action = {\r\n                                    type: 'DELETE_USER_PROJECT_SAGA',\r\n                                    userProject: {\r\n                                      userId: member.userId,\r\n                                      projectId: record.id,\r\n                                    }\r\n                                  }\r\n                                  dispatch(action);\r\n                                }}\r\n                              ><DeleteOutlined /></button>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                }}\r\n              >\r\n                <Avatar src={member.avatar} key={index} />\r\n              </Popover>\r\n            })}\r\n\r\n          {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\r\n\r\n          <Popover placement=\"rightTop\" title={\"add User\"} content={() => {\r\n            return <AutoComplete\r\n\r\n              //thuộc tính options của AutoComplete chỉ cho phép nhận vào mảng gồm các đối tượng vs thuộc tính là label vàvalue nên phải biến đổi \r\n              //mảng userSearchList về mảng phù hợp, và thuộc tính value chỉ đc mang gtri kiểu string nên phải đồi userId (kiểu number) ==> kiểu string\r\n              options={userSearchList?.map((user, index) => {\r\n                return { label: user.name, value: user.userId.toString() };\r\n              })}\r\n\r\n\r\n              //?mỗi khi ng dùng nhập thì gtri từ onChange sẽ đc setVale, ta lấy gtri đc thay đổi đó hiển lên ô input\r\n              value={value}\r\n\r\n              onChange={(text) => {\r\n                console.log(\"vào hàm onChange\", text);\r\n                setValue(text);\r\n\r\n              }}\r\n\r\n              onSelect={(valueSelect, option) => {\r\n                console.log(\" vào hàm onSelect\");\r\n                //*option chính là object gồm 2 thuộc tính label và value đc khai báo ở options attribute\r\n                console.log(\"value khi onSelect chính là userId\", value);\r\n                console.log(\"option of onSelect\", option);\r\n                //!set giá trị trong hộp thoiaj bằng option.label (nghĩa là name của user)\r\n                setValue(option.label);\r\n\r\n                //!tuy nhiên api khi gửi về backend thì cần userId của member(option.value) chứ k phải name(option.label)\r\n                dispatch({\r\n                  type: 'ADD_USER_PROJECT_SAGA',\r\n                  userProject: {\r\n                    \"projectId\": record.id,\r\n                    \"userId\": valueSelect,\r\n                  }\r\n                })\r\n              }}\r\n\r\n              className=\"w-100\"\r\n\r\n              onSearch={(value) => {\r\n                //VALUE ở dây chính là giá trị người dùng gõ vào\r\n                console.log(\"searchValue ở hàm onSearch\", value);\r\n                //!nếu mỗi lần ng dùng search mà call api ngay lập tức có thể gây tràn RAM tại server => phải dùng debounce search\r\n\r\n                //lần đầu searchRef = null nên sẽ k chạy vào if\r\n                //mục đích => xóa searchRef.current của lần trước\r\n                if (searchRef.current) {\r\n                  clearTimeout(searchRef.current);\r\n                }\r\n\r\n                //nếu tgian > 300ms thì mới call api\r\n                searchRef.current = setTimeout(() => {\r\n                  dispatch({\r\n                    type: 'GET_USER_CYBERBUGS_SAGA',\r\n                    keyWord: value,\r\n                  })\r\n                }, 500)\r\n\r\n              }} />\r\n          }} trigger=\"click\">\r\n            <Button style={{ borderRadius: '50%' }}>+</Button>\r\n          </Popover>\r\n        </div>\r\n\r\n\r\n      }\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record, index) => (\r\n        <Space size=\"middle\" key={index}>\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => {\r\n              const action = {\r\n                type: \"OPEN_FORM_EDIT_PROJECT\",\r\n                title: 'Edit Project',\r\n                Component: <FormEditProject />,\r\n                // SubmitFunction:\r\n              };\r\n              dispatch(action);\r\n\r\n              //dispatch dữ liệu dùng hiện tại\r\n              const actionEditProject = {\r\n                type: \"EDIT_PROJECT\",\r\n                projectEditModel: record,\r\n              };\r\n              dispatch(actionEditProject);\r\n            }}\r\n          >\r\n            <EditOutlined style={{ fontSize: 17 }} />\r\n          </button>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this project?\"\r\n            onConfirm={() => {\r\n              //nếu confirm đồng ý xóa thì mới dispatch action lên saga\r\n              dispatch({\r\n                type: \"DELETE_PROJECT_SAGA\",\r\n                idProject: record.id,\r\n              });\r\n              console.log(record.id)\r\n\r\n            }}\r\n            onCancel={cancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <button\r\n              className=\"btn btn-danger\"\r\n            // onClick={() => {\r\n            //   dispatch({\r\n            //     type: \"DELETE_PROJECT_SAGA\",\r\n            //     idProject: record.id,\r\n            //   });\r\n            // }}\r\n            >\r\n              <DeleteOutlined style={{ fontSize: 17 }} />\r\n            </button>\r\n          </Popconfirm>\r\n          ,\r\n\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Project Management</h2>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={setAgeSort}>Sort age</Button>\r\n        <Button onClick={clearFilters}>Clear filters</Button>\r\n        <Button onClick={clearAll}>Clear filters and sorters</Button>\r\n      </Space>\r\n      <Table\r\n        columns={columns}\r\n        rowKey={\"id\"}\r\n        dataSource={projectList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}