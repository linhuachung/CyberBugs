{"ast":null,"code":"//!rootReducer dùng để quản lí Reducer, rootSaga đc sử dụng để quản lí action, dụa vào action.type\n//Nếu là action thường thì viết ở file TodoListAction.js\n//* nếu là action return về 1 function thì viết ở rootSaga.js, vì file của saga thì chỉ nên quản lí những action trả về function\nimport Axios from 'axios';\nimport { fork, take, takeEvery, delay, takeLatest, call, put, all } from 'redux-saga/effects';\nimport * as TodoListSaga from './TodoListSaga';\nimport * as Cyberbugs from './CyberBugs/userCyberBugsSaga';\nimport * as ProjectCategorySaga from './CyberBugs/ProjectCyberbugsCategorySaga';\nimport { theoDoicreateProjectSaga, theoDoiGetProjectListSaga, theoDoiUpdateProjectSaga, theoDoiDeleteProjectSaga, theoDoiGetProjectDetailSaga, theoDoiGetAllProjectSaga } from './CyberBugs/ProjectSaga';\nimport * as TaskTypeSaga from './CyberBugs/TaskTypeSaga';\nimport { theoDoiGetAllPrioritySaga } from './CyberBugs/PrioritySaga';\nimport * as taskSaga from './CyberBugs/TaskSaga';\nimport * as statusSaga from './CyberBugs/StatusSaga'; //rootSaga giống như rootReducer, nhưng khác là tập hợp chứa action\n\nexport function* rootSaga() {\n  console.log(\"rootSaga\"); //?hàm all dùng để gọi tất cả các action cùng 1 lúc, truyền vào 1 mảng các action cần theo dõi\n\n  yield all([TodoListSaga.theoDoiActionGetTaskApi(), TodoListSaga.theoDoiActionAddTaskApi(), TodoListSaga.theoDoiActionDeleteTaskApi(), TodoListSaga.theoDoiActionDoneTaskApi(), TodoListSaga.theoDoiActionRejectTaskApi(), // dự án Cyberbugs\n  Cyberbugs.theoDoiSigninCyberBugs(), ProjectCategorySaga.theoDoigetAllProjectCategory(), theoDoicreateProjectSaga(), theoDoiGetProjectListSaga(), theoDoiUpdateProjectSaga(), theoDoiDeleteProjectSaga(), Cyberbugs.theoDoiGetUser(), Cyberbugs.theoDoiAddUserProject(), Cyberbugs.theoDoiDeleteUserProject(), Cyberbugs.theoDoiGetUsersByIdProjectSaga(), theoDoiGetProjectDetailSaga(), theoDoiGetAllProjectSaga(), TaskTypeSaga.theoDoiGetAllProjectSaga(), theoDoiGetAllPrioritySaga(), //nghiệp vụ về task\n  taskSaga.theoDoiCreateTaskSaga(), statusSaga.theoDoiGetAllStatusSaga()]);\n}","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/redux/sagas/rootSaga.js"],"names":["Axios","fork","take","takeEvery","delay","takeLatest","call","put","all","TodoListSaga","Cyberbugs","ProjectCategorySaga","theoDoicreateProjectSaga","theoDoiGetProjectListSaga","theoDoiUpdateProjectSaga","theoDoiDeleteProjectSaga","theoDoiGetProjectDetailSaga","theoDoiGetAllProjectSaga","TaskTypeSaga","theoDoiGetAllPrioritySaga","taskSaga","statusSaga","rootSaga","console","log","theoDoiActionGetTaskApi","theoDoiActionAddTaskApi","theoDoiActionDeleteTaskApi","theoDoiActionDoneTaskApi","theoDoiActionRejectTaskApi","theoDoiSigninCyberBugs","theoDoigetAllProjectCategory","theoDoiGetUser","theoDoiAddUserProject","theoDoiDeleteUserProject","theoDoiGetUsersByIdProjectSaga","theoDoiCreateTaskSaga","theoDoiGetAllStatusSaga"],"mappings":"AACA;AAEA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,SAApB,EAA8BC,KAA9B,EAAqCC,UAArC,EAAgDC,IAAhD,EAAsDC,GAAtD,EAA2DC,GAA3D,QAAsE,oBAAtE;AACA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,+BAA3B;AACA,OAAO,KAAKC,mBAAZ,MAAqC,0CAArC;AACA,SAAQC,wBAAR,EAAkCC,yBAAlC,EAA6DC,wBAA7D,EAAuFC,wBAAvF,EAAiHC,2BAAjH,EAA8IC,wBAA9I,QAA6K,yBAA7K;AACA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;AACA,SAAQC,yBAAR,QAAwC,0BAAxC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,OAAO,KAAKC,UAAZ,MAA4B,wBAA5B,C,CAIA;;AACA,OAAO,UAAWC,QAAX,GAAsB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADyB,CAEzB;;AACA,QAAMhB,GAAG,CAAC,CACNC,YAAY,CAACgB,uBAAb,EADM,EAENhB,YAAY,CAACiB,uBAAb,EAFM,EAGNjB,YAAY,CAACkB,0BAAb,EAHM,EAINlB,YAAY,CAACmB,wBAAb,EAJM,EAKNnB,YAAY,CAACoB,0BAAb,EALM,EAQN;AACAnB,EAAAA,SAAS,CAACoB,sBAAV,EATM,EAUNnB,mBAAmB,CAACoB,4BAApB,EAVM,EAWNnB,wBAAwB,EAXlB,EAYNC,yBAAyB,EAZnB,EAaNC,wBAAwB,EAblB,EAcNC,wBAAwB,EAdlB,EAeNL,SAAS,CAACsB,cAAV,EAfM,EAgBNtB,SAAS,CAACuB,qBAAV,EAhBM,EAiBNvB,SAAS,CAACwB,wBAAV,EAjBM,EAkBNxB,SAAS,CAACyB,8BAAV,EAlBM,EAmBNnB,2BAA2B,EAnBrB,EAoBNC,wBAAwB,EApBlB,EAsBNC,YAAY,CAACD,wBAAb,EAtBM,EAuBNE,yBAAyB,EAvBnB,EAyBN;AACAC,EAAAA,QAAQ,CAACgB,qBAAT,EA1BM,EA2BNf,UAAU,CAACgB,uBAAX,EA3BM,CAAD,CAAT;AAwCH","sourcesContent":["\r\n//!rootReducer dùng để quản lí Reducer, rootSaga đc sử dụng để quản lí action, dụa vào action.type\r\n\r\n//Nếu là action thường thì viết ở file TodoListAction.js\r\n//* nếu là action return về 1 function thì viết ở rootSaga.js, vì file của saga thì chỉ nên quản lí những action trả về function\r\n\r\n\r\nimport Axios from 'axios';\r\nimport {fork, take, takeEvery,delay, takeLatest,call, put, all } from 'redux-saga/effects';\r\nimport * as TodoListSaga from './TodoListSaga';\r\nimport * as Cyberbugs from './CyberBugs/userCyberBugsSaga';\r\nimport * as ProjectCategorySaga from './CyberBugs/ProjectCyberbugsCategorySaga'\r\nimport {theoDoicreateProjectSaga, theoDoiGetProjectListSaga, theoDoiUpdateProjectSaga, theoDoiDeleteProjectSaga, theoDoiGetProjectDetailSaga, theoDoiGetAllProjectSaga} from './CyberBugs/ProjectSaga';\r\nimport * as TaskTypeSaga from './CyberBugs/TaskTypeSaga';\r\nimport {theoDoiGetAllPrioritySaga} from './CyberBugs/PrioritySaga';\r\nimport * as taskSaga from './CyberBugs/TaskSaga';\r\nimport * as statusSaga from './CyberBugs/StatusSaga';\r\n\r\n\r\n\r\n//rootSaga giống như rootReducer, nhưng khác là tập hợp chứa action\r\nexport function * rootSaga() {\r\n    console.log(\"rootSaga\");\r\n    //?hàm all dùng để gọi tất cả các action cùng 1 lúc, truyền vào 1 mảng các action cần theo dõi\r\n    yield all([\r\n        TodoListSaga.theoDoiActionGetTaskApi(),\r\n        TodoListSaga.theoDoiActionAddTaskApi(),\r\n        TodoListSaga.theoDoiActionDeleteTaskApi(),\r\n        TodoListSaga.theoDoiActionDoneTaskApi(),\r\n        TodoListSaga.theoDoiActionRejectTaskApi(),\r\n\r\n\r\n        // dự án Cyberbugs\r\n        Cyberbugs.theoDoiSigninCyberBugs(),\r\n        ProjectCategorySaga.theoDoigetAllProjectCategory(),\r\n        theoDoicreateProjectSaga(),\r\n        theoDoiGetProjectListSaga(),\r\n        theoDoiUpdateProjectSaga(),\r\n        theoDoiDeleteProjectSaga(),\r\n        Cyberbugs.theoDoiGetUser(),\r\n        Cyberbugs.theoDoiAddUserProject(),\r\n        Cyberbugs.theoDoiDeleteUserProject(),\r\n        Cyberbugs.theoDoiGetUsersByIdProjectSaga(),\r\n        theoDoiGetProjectDetailSaga(),\r\n        theoDoiGetAllProjectSaga(),\r\n        \r\n        TaskTypeSaga.theoDoiGetAllProjectSaga(),\r\n        theoDoiGetAllPrioritySaga(),\r\n        \r\n        //nghiệp vụ về task\r\n        taskSaga.theoDoiCreateTaskSaga(),\r\n        statusSaga.theoDoiGetAllStatusSaga(),\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n\r\n    ])\r\n\r\n}"]},"metadata":{},"sourceType":"module"}