{"ast":null,"code":"import { fork, take, takeEvery, delay, takeLatest, select, call, put } from \"redux-saga/effects\";\nimport { STATUS_CODE } from './../../../util/constants/settingSystem';\nimport { taskTypeService } from './../../../services/TaskTypeService';\nimport { GET_ALL_TAKSK_TYPE } from \"../../constants/Cyberbugs/TaskTypeConstant\";\nimport { GET_ALL_TAKSK_TYPE_SAGA } from './../../constants/Cyberbugs/TaskTypeConstant'; // -----------------------NHIỆM VỤ GET ALL PROJECT TYPE-------------------\n\nfunction* getAllTaskTypeSaga(action) {\n  console.log(\"vào generator Func getAllTaskTypeSaga\");\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(() => taskTypeService.getAllTaskType());\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_ALL_TAKSK_TYPE,\n        arrTaskType: data.content\n      });\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* theoDoiGetAllProjectSaga() {\n  yield takeLatest(GET_ALL_TAKSK_TYPE_SAGA, getAllTaskTypeSaga);\n}","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/redux/sagas/CyberBugs/TaskTypeSaga.js"],"names":["fork","take","takeEvery","delay","takeLatest","select","call","put","STATUS_CODE","taskTypeService","GET_ALL_TAKSK_TYPE","GET_ALL_TAKSK_TYPE_SAGA","getAllTaskTypeSaga","action","console","log","data","status","getAllTaskType","SUCCESS","type","arrTaskType","content","error","theoDoiGetAllProjectSaga"],"mappings":"AAAA,SACIA,IADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,UALJ,EAMIC,MANJ,EAOIC,IAPJ,EAQIC,GARJ,QASS,oBATT;AAUA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,uBAAT,QAAwC,8CAAxC,C,CAGA;;AAEA,UAAUC,kBAAV,CAA8BC,MAA9B,EAAsC;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AACA,MAAG;AACC,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAiB,MAAMX,IAAI,CAAE,MAAMG,eAAe,CAACS,cAAhB,EAAR,CAAjC;;AAEA,QAAGD,MAAM,KAAKT,WAAW,CAACW,OAA1B,EAAmC;AAC/B,YAAMZ,GAAG,CAAC;AACNa,QAAAA,IAAI,EAAEV,kBADA;AAENW,QAAAA,WAAW,EAAEL,IAAI,CAACM;AAFZ,OAAD,CAAT;AAIH;AAEJ,GAVD,CAUE,OAAMC,KAAN,EAAY;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB;AACH;AACJ;;AAGD,OAAO,UAAUC,wBAAV,GAAqC;AACxC,QAAMpB,UAAU,CAACO,uBAAD,EAA0BC,kBAA1B,CAAhB;AACD","sourcesContent":["import {\r\n    fork,\r\n    take,\r\n    takeEvery,\r\n    delay,\r\n    takeLatest,\r\n    select,\r\n    call,\r\n    put,\r\n  } from \"redux-saga/effects\";\r\nimport { STATUS_CODE } from './../../../util/constants/settingSystem';\r\nimport { taskTypeService } from './../../../services/TaskTypeService';\r\nimport { GET_ALL_TAKSK_TYPE } from \"../../constants/Cyberbugs/TaskTypeConstant\";\r\nimport { GET_ALL_TAKSK_TYPE_SAGA } from './../../constants/Cyberbugs/TaskTypeConstant';\r\n\r\n\r\n// -----------------------NHIỆM VỤ GET ALL PROJECT TYPE-------------------\r\n\r\nfunction *getAllTaskTypeSaga (action) {\r\n    console.log(\"vào generator Func getAllTaskTypeSaga\");\r\n    try{\r\n        const {data, status} = yield call (() => taskTypeService.getAllTaskType())\r\n\r\n        if(status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_TAKSK_TYPE,\r\n                arrTaskType: data.content,\r\n            })\r\n        }\r\n\r\n    } catch(error){\r\n        console.log(\"error\", error);\r\n    }\r\n}\r\n\r\n\r\nexport function* theoDoiGetAllProjectSaga() {\r\n    yield takeLatest(GET_ALL_TAKSK_TYPE_SAGA, getAllTaskTypeSaga);\r\n  }\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}