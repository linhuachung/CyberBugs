{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chun Folder\\\\Test web html\\\\Cyberbugs1\\\\src\\\\pages\\\\TodoList\\\\TodoListRCC.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport style from './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoListRCC extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskList: [],\n      values: {\n        taskName: ''\n      },\n      errors: {\n        taskName: ''\n      }\n    };\n\n    this.getTaskList = () => {\n      //Axios trả về 1 promise\n      let promise = Axios({\n        url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n        method: 'GET'\n      });\n      promise.then(response => {\n        console.log(\"response\", response.data); //? Nếu gọi api lấy về mảng taskList thì set lại state taskList vs mảng đc lấy về\n\n        this.setState({\n          // ...this.state,\n          taskList: response.data\n        }, () => {\n          console.log(\"state in RCC\", this.state);\n        });\n      });\n      promise.catch(error => {\n        console.log(\"error\", error);\n      });\n    };\n\n    this.renderTaskTodo = () => {\n      return this.state.taskList.filter(task => !task.status).map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove\",\n              type: \"button\",\n              onClick: () => {\n                this.deleteTask(task.taskName);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"complete\",\n              type: \"button\",\n              onClick: () => {\n                this.checkTask(task.taskName);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-check-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this);\n      });\n    };\n\n    this.renderTaskTodoDone = () => {\n      return this.state.taskList.filter(task => task.status).map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove\",\n              type: \"button\",\n              onClick: () => {\n                this.deleteTask(task.taskName);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"complete\",\n              onClick: () => {\n                this.rejectTask(task.taskName);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-undo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-undo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      });\n    };\n\n    this.handleChange = e => {\n      let {\n        value,\n        name\n      } = e.target;\n      console.log(value, name);\n      let newValues = { ...this.state.values\n      };\n      newValues = { ...newValues,\n        [name]: value\n      };\n      let newErrors = { ...this.state.errors\n      };\n      let regexString = /^[a-z A-Z]+$/;\n\n      if (!regexString.test(value) || value.trim() === '') {\n        newErrors[name] = name + ' invalid !';\n      } else {\n        newErrors[name] = '';\n      }\n\n      this.setState({ ...this.state,\n        values: newValues,\n        errors: newErrors\n      });\n    };\n\n    this.addTask = e => {\n      e.preventDefault();\n      let promise = Axios({\n        url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n        method: 'POST',\n        data: {\n          taskName: this.state.values.taskName\n        } //gửi lên serve 1 task mới\n\n      });\n      promise.then(response => {\n        // console.log(\"response\", response);\n        //sau khi đưa dữ liệu thành công lên serve thì gọi hàm getTaskList lại để load lại danh sách taskList(bao gồm taskName)\n        this.getTaskList();\n      });\n      promise.catch(errors => {\n        alert(errors.response.data); //task name is already exists!\n      });\n    };\n\n    this.deleteTask = taskName => {\n      let promise = Axios({\n        url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n        method: 'DELETE'\n      });\n      promise.then(response => {\n        console.log(\"response\", response);\n        this.getTaskList();\n      });\n      promise.catch(errors => {\n        console.log(errors.response.data);\n      });\n    };\n\n    this.checkTask = taskName => {\n      let promise = Axios({\n        url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n        method: 'PUT'\n      });\n      promise.then(response => {\n        console.log(\"response\", response);\n        this.getTaskList();\n      });\n      promise.catch(errors => {\n        console.log(errors.response.data);\n      });\n    };\n\n    this.rejectTask = taskName => {\n      let promise = Axios({\n        url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n        method: 'PUT'\n      });\n      promise.then(response => {\n        console.log(\"response\", response);\n        this.getTaskList();\n      });\n      promise.catch(errors => {\n        console.log(errors.response.data);\n      });\n    };\n  }\n\n  //? hàm sẽ tự động thực thi sau khi nội dung component đc render\n  //mởi bật web lên thì sau khi chạy xong hàm render phải get đc taskList\n  componentDidMount() {\n    this.getTaskList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.addTask,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__header\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('./bg.png'),\n            alt: \"todolist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card__title\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"My Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"September 9,2020\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card__add\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"taskName\",\n                  id: \"newTask\",\n                  onChange: this.handleChange,\n                  type: \"text\",\n                  placeholder: \"Enter an activity...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"addItem\",\n                  type: \"submit\",\n                  onClick: this.addTask,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: [\" \", this.state.errors.taskName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card__todo\",\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"todo\",\n                id: \"todo\",\n                children: this.renderTaskTodo()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"todo\",\n                id: \"completed\",\n                children: this.renderTaskTodoDone()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoListRCC;","map":{"version":3,"sources":["D:/Chun Folder/Test web html/Cyberbugs1/src/pages/TodoList/TodoListRCC.js"],"names":["React","Component","Axios","style","TodoListRCC","state","taskList","values","taskName","errors","getTaskList","promise","url","method","then","response","console","log","data","setState","catch","error","renderTaskTodo","filter","task","status","map","index","deleteTask","checkTask","renderTaskTodoDone","rejectTask","handleChange","e","value","name","target","newValues","newErrors","regexString","test","trim","addTask","preventDefault","alert","componentDidMount","render","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport style from './TodoList.css';\r\n\r\nclass TodoListRCC extends Component {\r\n\r\n    state = {\r\n        taskList: [],\r\n        values: {\r\n            taskName: '',\r\n        },\r\n        errors: {\r\n            taskName: ''\r\n        }\r\n    }\r\n\r\n\r\n    getTaskList = () => {\r\n        //Axios trả về 1 promise\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\r\n            method: 'GET',\r\n        });\r\n        promise.then((response) => {\r\n            console.log(\"response\", response.data);\r\n            //? Nếu gọi api lấy về mảng taskList thì set lại state taskList vs mảng đc lấy về\r\n            this.setState({\r\n                // ...this.state,\r\n                taskList: response.data,\r\n            }, ()=> {console.log(\"state in RCC\", this.state)})\r\n        });\r\n\r\n        promise.catch((error) => {\r\n            console.log(\"error\", error);\r\n        })\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    renderTaskTodo = () => {\r\n        return this.state.taskList.filter(task => !task.status).map((task, index) => {\r\n            return  <li key = {index}>\r\n                        <span>{task.taskName}</span>\r\n                        <div className=\"buttons\">\r\n                        <button className=\"remove\" type = \"button\" onClick={ () => {this.deleteTask(task.taskName)}}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button className=\"complete\" type = \"button\" onClick = {() => {this.checkTask(task.taskName)}}>\r\n                            <i className=\"far fa-check-circle\" />\r\n                            <i className=\"fas fa-check-circle\" />\r\n                        </button>\r\n                        </div>\r\n                    </li>\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    renderTaskTodoDone = () => {\r\n        return this.state.taskList.filter(task=> task.status).map((task, index) => {\r\n            return  <li key = {index}>\r\n                        <span>{task.taskName}</span>\r\n                        <div className=\"buttons\">\r\n                        <button className=\"remove\" type = \"button\" onClick={ () => {this.deleteTask(task.taskName)}}>\r\n                            <i className=\"fa fa-trash-alt\" />\r\n                        </button>\r\n                        <button type = \"button\" className=\"complete\" onClick = {()=> {this.rejectTask(task.taskName)}}>\r\n                            <i className=\"far fa-undo\" />\r\n                            <i className=\"fas fa-undo\" />\r\n                        </button>\r\n                        </div>\r\n                    </li> \r\n          \r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    //? hàm sẽ tự động thực thi sau khi nội dung component đc render\r\n    //mởi bật web lên thì sau khi chạy xong hàm render phải get đc taskList\r\n    componentDidMount() {\r\n        this.getTaskList();\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        \r\n        let { value, name } = e.target;\r\n        console.log(value, name);\r\n        let newValues = { ...this.state.values };\r\n\r\n        newValues = { ...newValues, [name]: value };\r\n\r\n        let newErrors = { ...this.state.errors };\r\n\r\n        let regexString = /^[a-z A-Z]+$/;\r\n\r\n        if (!regexString.test(value) || value.trim() === '') {\r\n            newErrors[name] = name + ' invalid !';\r\n        } else {\r\n            newErrors[name] = '';\r\n        }\r\n\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            values: newValues,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    addTask = (e) => {\r\n        e.preventDefault();\r\n        let promise = Axios({\r\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\r\n            method: 'POST',\r\n            data: {taskName: this.state.values.taskName},  //gửi lên serve 1 task mới\r\n        });\r\n        promise.then((response) => {\r\n            // console.log(\"response\", response);\r\n            //sau khi đưa dữ liệu thành công lên serve thì gọi hàm getTaskList lại để load lại danh sách taskList(bao gồm taskName)\r\n            this.getTaskList();\r\n        })\r\n\r\n        promise.catch((errors) => {\r\n            alert(errors.response.data);     //task name is already exists!\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    //hàm xóa task\r\n    deleteTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method: 'DELETE',\r\n        })\r\n\r\n        promise.then((response) => {\r\n            console.log(\"response\", response);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch((errors) => {\r\n            console.log(errors.response.data); \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    //xử lí done task\r\n    checkTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n\r\n        promise.then((response) => {\r\n            console.log(\"response\", response);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch((errors) => {\r\n            console.log(errors.response.data); \r\n        })\r\n    }\r\n\r\n\r\n\r\n    //xử lí undoTask đã hoàn thành \r\n\r\n    rejectTask = (taskName) => {\r\n        let promise = Axios({\r\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method: 'PUT',\r\n        })\r\n\r\n        promise.then((response) => {\r\n            console.log(\"response\", response);\r\n            this.getTaskList();\r\n        });\r\n\r\n        promise.catch((errors) => {\r\n            console.log(errors.response.data); \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit = {this.addTask}>\r\n                {/* <button className=\"btn btn-success\" onClick = {() => {this.getTaskList()}}>Get Task List</button> */}\r\n                <div className=\"card\">\r\n                    <div className=\"card__header\">\r\n                    <img src={require('./bg.png')} alt=\"todolist\" />\r\n                    </div>\r\n                    {/* <h2>hello!</h2> */}\r\n                    <div className=\"card__body\">\r\n                        <div className=\"card__content\">\r\n                            <div className = \"form-group\">\r\n                                <div className=\"card__title\">\r\n                                    <h2>My Tasks</h2>\r\n                                    <p>September 9,2020</p>\r\n                                </div>\r\n                                <div className=\"card__add\">\r\n                                    <input name = \"taskName\" id=\"newTask\" onChange = {this.handleChange} type=\"text\" placeholder=\"Enter an activity...\" />\r\n                                    <button id=\"addItem\" type = \"submit\" onClick = {this.addTask}>\r\n                                        <i className=\"fa fa-plus\" />\r\n                                    </button>\r\n\r\n                                </div>\r\n                                    <p className=\"text-danger\"> {this.state.errors.taskName}</p>\r\n                                \r\n                            </div>\r\n                            <div className=\"card__todo\">\r\n                                    {/* Uncompleted tasks */}\r\n                                    <ul className=\"todo\" id=\"todo\">\r\n                                        {this.renderTaskTodo()}\r\n                                    </ul>\r\n                                    {/* Completed tasks */}\r\n                                    <ul className=\"todo\" id=\"completed\">\r\n                                        {this.renderTaskTodoDone()}\r\n                                    </ul>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListRCC;"]},"metadata":{},"sourceType":"module"}